library(dplyr)
library(ggplot2)
load("~/Downloads/Lecture Notes/ADAML-UniBam/EESys_ADAML_6_DiD_exercise_2019_12_13_skeleton.R")
library(dplyr)
library(ggplot2)
Shower_data <- read.csv2("Shower_data.csv")
setwd("/Users/pritommazumder/Downloads/Lecture Notes/ADAML-UniBam")
Shower_data <- read.csv2("Shower_data.csv")
Survey_data <- read.csv2("Shower_Survey_data.csv")
Shower_data <- Shower_data %>% dplyr::filter(Shower != 1) %>%
dplyr::mutate(isTreatment = ifelse(group %in% c("1","2"), FALSE, TRUE),
isIntervention = ifelse(Shower <= 10, FALSE, TRUE))
merged_data <- merge(Shower_data, Survey_data, by = "ParticipantID", all.x = TRUE)
head(mtcars)
View(mtcars)
M <- lm(mpg ~ . , data =mtcars)
summary(M)
AIC(M)
(M1 <- step(lm(mpg ~ . , data = mtcars),
scope= "mpg ~ .", direction="both"))
(M2 <- step(lm(mpg ~ . , data = mtcars),
scope= "mpg ~ .", direction="backward"))
AIC(M1)
AIC(M2)
diabetesData <- read.csv2("diabetes.csv", stringsAsFactors = FALSE)
diabetesData <- read.csv2("diabetes.csv", stringsAsFactors = FALSE)
View(diabetesData)
diabetesData$BMI <- as.numeric(diabetesData$BMI)
diabetesData$DiabetesPedigreeFunction <- as.numeric(diabetesData$DiabetesPedigreeFunction)
diabetesData$Outcome <- as.factor(diabetesData$Outcome)
model <- glm(Outcome~BMI, data = diabetesData, family = "binomial")
summary(model)
# BMI value for which you want to calculate the probability
BMI_value <- 25
# Calculate the log-odds
log_odds <- predict(model, newdata = data.frame(BMI = BMI_value), type = "link")
# Calculate the probability of having diabetes
prob_diabetes <- 1 / (1 + exp(-log_odds))
# Calculate the probability of not having diabetes
prob_not_diabetes <- 1 - prob_diabetes
# Assuming you have the model object from your logistic regression
model <- glm(Outcome ~ BMI, data = diabetesData, family = "binomial")
# BMI value for which you want to calculate the probability
BMI_value <- 25
# Create a new data frame with the BMI value
new_data <- data.frame(BMI = BMI_value)
# Use the predict function to obtain the predicted probabilities
predicted_probabilities <- predict(model, newdata = new_data, type = "response")
# Print the predicted probability of having diabetes
cat("Predicted probability of having diabetes:", predicted_probabilities, "\n")
